name: AI Town CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Code formatting check with black
      run: |
        black --check --diff .

    - name: Import sorting check with isort
      run: |
        isort --check-only --diff .

    - name: Lint with flake8
      run: |
        # 只检查语法错误和未定义名称
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run tests with pytest
      run: |
        pytest test/ -v

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run bandit security linter
      run: |
        bandit -r ai_town/ -ll || true

    - name: Check dependencies for known vulnerabilities
      run: |
        safety check --json || true

  build-and-validate:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test core imports
      run: |
        python -c "
        try:
            from ai_town.events.event_registry import event_registry
            from ai_town.events.event_formatter import event_formatter
            print('✅ 核心模块导入成功')
        except ImportError as e:
            print(f'❌ 导入失败: {e}')
            exit(1)
        "

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check README exists
      run: |
        if [ ! -f README.md ]; then
          echo "❌ README.md 文件缺失"
          exit 1
        fi
        echo "✅ README.md 存在"
